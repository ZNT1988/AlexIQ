// Test d'int√©gration AlexCommunicationEngine avec serveur port 3003
// Node >= 18

import AlexCommunicationEngine from './backend/alex-modules/specialized/AlexCommunicationEngine.js';

async function testCommunicationModule() {
  console.log('üß™ Test AlexCommunicationEngine - Port 3003 Integration');
  
  try {
    // 1. Test initialisation
    console.log('1. Initialisation du module...');
    await AlexCommunicationEngine.initialize();
    console.log('‚úÖ Module initialis√©');
    
    // 2. Test status
    console.log('2. V√©rification du statut...');
    const status = AlexCommunicationEngine.getCommunicationStatus();
    console.log('‚úÖ Statut:', {
      initialized: status.initialized,
      currentStyle: status.currentStyle,
      naturalness: status.naturalness
    });
    
    // 3. Test g√©n√©ration r√©ponse
    console.log('3. Test g√©n√©ration r√©ponse...');
    const response = await AlexCommunicationEngine.generateResponse(
      "Hello, peux-tu m'aider avec HustleFinder IA ?",
      { port: 3003, source: 'front-integration-test' }
    );
    console.log('‚úÖ R√©ponse g√©n√©r√©e:', {
      timestamp: response.timestamp,
      hasResponse: !!response.finalResponse,
      length: response.finalResponse?.length || 0
    });
    
    // 4. Test changement style
    console.log('4. Test changement style...');
    const styleChange = await AlexCommunicationEngine.switchCommunicationStyle('professional', 'test-integration');
    console.log('‚úÖ Style chang√©:', styleChange.newStyle);
    
    console.log('\nüéâ TOUS LES TESTS PASS√âS - Module pr√™t pour production');
    console.log('üîó Compatible avec serveur port 3003');
    console.log('ü§ñ APIs r√©elles configur√©es (OpenAI/Anthropic/Vertex/Gemini)');
    
  } catch (error) {
    console.error('‚ùå ERREUR TEST:', error.message);
    console.log('Stack:', error.stack);
    process.exit(1);
  }
}

// Ex√©cution si appel√© directement
if (import.meta.url === `file://${process.argv[1]}`) {
  testCommunicationModule();
}