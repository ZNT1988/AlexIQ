name: Build and SonarQube Analysis

on:
  push:
    branches:
      - main
      - minimal-prod
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests with coverage
        run: |
          npm test -- --coverage || echo "Tests completed with issues"
          # Run Phase 1 tests
          node test-phase1-context-intelligence.js || echo "Phase 1 tests completed"
          # Run Phase 2 tests  
          node test-phase2-response-generation.js || echo "Phase 2 tests completed"
          # Run Phase 3 tests
          node test-phase3-autonomous-adaptation.js || echo "Phase 3 tests completed"
        continue-on-error: true
      
      - name: Run ESLint
        run: |
          npx eslint . --ext .js --format json -o eslint-report.json || echo "ESLint completed"
        continue-on-error: true
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ZNT1988_AlexIQ
            -Dsonar.organization=alexiq
            -Dsonar.host.url=https://sonarcloud.io
      
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: SonarSource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # Force to fail step after specific time
        timeout-minutes: 5
        continue-on-error: true

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: sonarqube
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: |
          echo "Building HustleFinder IA..."
          # Add your build commands here if needed
          echo "Build completed successfully"
      
      - name: Run comprehensive tests
        run: |
          echo "ðŸ§ª Running HustleFinder IA Test Suite..."
          
          echo "ðŸ“‹ Phase 1: Context Intelligence Tests"
          node test-phase1-context-intelligence.js
          
          echo "ðŸ“‹ Phase 2: Response Generation Tests" 
          node test-phase2-response-generation.js
          
          echo "ðŸ“‹ Phase 3: Autonomous Adaptation Tests"
          node test-phase3-autonomous-adaptation.js
          
          echo "âœ… All test phases completed successfully!"
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test*.db
            *-report.json
            coverage/
          retention-days: 7